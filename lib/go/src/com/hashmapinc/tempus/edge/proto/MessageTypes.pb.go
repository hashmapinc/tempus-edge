// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MessageTypes.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// =============================================================================
// Define byte values for describing tempus edge message types
// =============================================================================
// Define config message types
type ConfigMessageTypes int32

const (
	ConfigMessageTypes_UPDATE_ALERT                 ConfigMessageTypes = 0
	ConfigMessageTypes_TRACK_CONFIG_SUBMISSION      ConfigMessageTypes = 1
	ConfigMessageTypes_TRACK_METADATA_SUBMISSION    ConfigMessageTypes = 2
	ConfigMessageTypes_MQTT_CONFIG_SUBMISSION       ConfigMessageTypes = 3
	ConfigMessageTypes_OPC_CONFIG_SUBMISSION        ConfigMessageTypes = 4
	ConfigMessageTypes_OPC_SUBSCRIPTIONS_SUBMISSION ConfigMessageTypes = 5
)

var ConfigMessageTypes_name = map[int32]string{
	0: "UPDATE_ALERT",
	1: "TRACK_CONFIG_SUBMISSION",
	2: "TRACK_METADATA_SUBMISSION",
	3: "MQTT_CONFIG_SUBMISSION",
	4: "OPC_CONFIG_SUBMISSION",
	5: "OPC_SUBSCRIPTIONS_SUBMISSION",
}
var ConfigMessageTypes_value = map[string]int32{
	"UPDATE_ALERT":                 0,
	"TRACK_CONFIG_SUBMISSION":      1,
	"TRACK_METADATA_SUBMISSION":    2,
	"MQTT_CONFIG_SUBMISSION":       3,
	"OPC_CONFIG_SUBMISSION":        4,
	"OPC_SUBSCRIPTIONS_SUBMISSION": 5,
}

func (x ConfigMessageTypes) String() string {
	return proto1.EnumName(ConfigMessageTypes_name, int32(x))
}
func (ConfigMessageTypes) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

// Define data message types
type DataMessageTypes int32

const (
	DataMessageTypes_JSON DataMessageTypes = 0
	DataMessageTypes_MQTT DataMessageTypes = 1
	DataMessageTypes_OPC  DataMessageTypes = 2
)

var DataMessageTypes_name = map[int32]string{
	0: "JSON",
	1: "MQTT",
	2: "OPC",
}
var DataMessageTypes_value = map[string]int32{
	"JSON": 0,
	"MQTT": 1,
	"OPC":  2,
}

func (x DataMessageTypes) String() string {
	return proto1.EnumName(DataMessageTypes_name, int32(x))
}
func (DataMessageTypes) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func init() {
	proto1.RegisterEnum("com.hashmapinc.tempus.edge.proto.ConfigMessageTypes", ConfigMessageTypes_name, ConfigMessageTypes_value)
	proto1.RegisterEnum("com.hashmapinc.tempus.edge.proto.DataMessageTypes", DataMessageTypes_name, DataMessageTypes_value)
}

func init() { proto1.RegisterFile("MessageTypes.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf2, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0x0d, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52,
	0x48, 0xce, 0xcf, 0xd5, 0xcb, 0x48, 0x2c, 0xce, 0xc8, 0x4d, 0x2c, 0xc8, 0xcc, 0x4b, 0xd6, 0x2b,
	0x49, 0xcd, 0x2d, 0x28, 0x2d, 0xd6, 0x4b, 0x4d, 0x49, 0x4f, 0x85, 0xa8, 0xd0, 0xda, 0xcd, 0xc8,
	0x25, 0xe4, 0x9c, 0x9f, 0x97, 0x96, 0x99, 0x8e, 0xac, 0x5d, 0x48, 0x80, 0x8b, 0x27, 0x34, 0xc0,
	0xc5, 0x31, 0xc4, 0x35, 0xde, 0xd1, 0xc7, 0x35, 0x28, 0x44, 0x80, 0x41, 0x48, 0x9a, 0x4b, 0x3c,
	0x24, 0xc8, 0xd1, 0xd9, 0x3b, 0xde, 0xd9, 0xdf, 0xcf, 0xcd, 0xd3, 0x3d, 0x3e, 0x38, 0xd4, 0xc9,
	0xd7, 0x33, 0x38, 0xd8, 0xd3, 0xdf, 0x4f, 0x80, 0x51, 0x48, 0x96, 0x4b, 0x12, 0x22, 0xe9, 0xeb,
	0x1a, 0xe2, 0xe8, 0xe2, 0x18, 0xe2, 0x88, 0x2c, 0xcd, 0x24, 0x24, 0xc5, 0x25, 0xe6, 0x1b, 0x18,
	0x12, 0x82, 0x45, 0x2b, 0xb3, 0x90, 0x24, 0x97, 0xa8, 0x7f, 0x80, 0x33, 0x16, 0x29, 0x16, 0x21,
	0x05, 0x2e, 0x19, 0x90, 0x54, 0x70, 0xa8, 0x53, 0xb0, 0x73, 0x90, 0x67, 0x40, 0x88, 0xa7, 0xbf,
	0x5f, 0x30, 0xb2, 0x0a, 0x56, 0x2d, 0x7d, 0x2e, 0x01, 0x97, 0xc4, 0x92, 0x44, 0x14, 0xa7, 0x73,
	0x70, 0xb1, 0x78, 0x05, 0xfb, 0xfb, 0x09, 0x30, 0x80, 0x58, 0x20, 0x6b, 0x05, 0x18, 0x85, 0xd8,
	0xb9, 0x98, 0xfd, 0x03, 0x9c, 0x05, 0x98, 0x9c, 0x94, 0xa2, 0x40, 0x41, 0xa2, 0x8f, 0x08, 0x12,
	0x7d, 0x48, 0x90, 0xe8, 0x83, 0x82, 0x44, 0x1f, 0x1c, 0x24, 0x49, 0x6c, 0x60, 0xca, 0x18, 0x10,
	0x00, 0x00, 0xff, 0xff, 0x7c, 0x49, 0xfc, 0x62, 0x51, 0x01, 0x00, 0x00,
}
